set scrolloff=10
set linenumber
set showmode
set showcmd

set smartcase
set incsearch
set hlsearch

set visualbell

let mapleader = " "

set highlightedyank
set nerdtree

set easymotion
set notimeout

inoremap jk <Esc>

nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>

nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

map <leader>c <action>(CommentByLineComment)

map <leader>x :NERDTreeToggle<CR>

map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)

map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

nmap <leader>gD <Action>(GotoDeclaration)
nmap <leader>gt <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
